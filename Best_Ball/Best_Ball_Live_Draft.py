# This script imports a live draft from the Sleeper platform and produces a best ball ranking for all
# available players at any point in the draft.

import pandas as pd
import requests

# turn off truncation of rows and columns for debug purposes.
pd.set_option('display.max_rows', None)
pd.set_option('display.max_columns', None)

# Load in the player data map from Sleeper.
# Sleeper_Player_Map.csv is generated by Get_Sleeper_Player_Map.py. This script should only be run once prior to
# starting the draft or at most, once a day.
map_df = pd.read_csv('Sleeper_Player_Map.csv').astype(str)

# Store Sleeper Draft URL for draft data.
draft_id = input('Enter your Sleeper draft ID number (This is found in the sleeper draft url): ')
sleeper_url = "https://api.sleeper.app/v1/draft/" + draft_id + "/picks"

# Request draft data from Sleeper and store in a DataFrame.
sleeper_request = requests.get(sleeper_url).json()
draft_df = pd.DataFrame.from_dict(sleeper_request, orient='columns')[['round', 'pick_no', 'player_id']]

# Use the sleeper player map to translate ID's into name, team and position data.
for _, row in draft_df.iterrows():
    player_id = row['player_id']
    player = map_df.loc[map_df['player_id'] == player_id]
    draft_df.at[_, 'Player'] = player['full_name'].tolist()[0]
    draft_df.at[_, 'Team'] = player['team'].tolist()[0]
    draft_df.at[_, 'Pos.'] = player['position'].tolist()[0]

# Load in the complete Best Ball draft board.
# Best_Ball_Draft_Board.csv is generated by Best_Ball_Draft_Board.py. This script should only be run once prior to
# starting the draft.
board_df = pd.read_csv('Best_Ball_Draft_Board.csv').drop('Unnamed: 0', axis=1)

# Take taken players out of the draft board.
for _, row in draft_df.iterrows():
    board_df.drop(board_df.loc[board_df['Player'].str.contains(row['Player'])].index, inplace=True)

print(board_df.head(30))
